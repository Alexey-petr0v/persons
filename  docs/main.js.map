{"version":3,"sources":["./src/app/update-person/update-person.component.ts","./src/app/update-person/update-person.component.html","./src/app/remove-person/remove-person.component.ts","./src/app/remove-person/remove-person.component.html","./src/environments/environment.ts","./src/app/notifier/notifier.component.ts","./src/app/notifier/notifier.component.html","./src/app/notifier/notifier.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/notifier/notifier.service.ts","./src/app/persons.service.ts","./src/app/app.module.ts","./src/app/create-person/create-person.component.ts","./src/app/create-person/create-person.component.html","./src/app/persons/persons.component.ts","./src/app/persons/persons.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\nimport { PersonsService } from '../persons.service';\r\n\r\n@Component({\r\n  selector: 'app-update-person',\r\n  templateUrl: './update-person.component.html',\r\n  styleUrls: ['./update-person.component.scss']\r\n})\r\nexport class UpdatePersonComponent implements OnInit {\r\n\r\n  @Input() idperson = 0;\r\n  @Input() firstName = '';\r\n  @Input() lastName = '';\r\n\r\n  hideModal = 'update-person__modal_hide';\r\n\r\n  firstNameControl = new FormControl();\r\n  lastNameControl = new FormControl();\r\n\r\n  private inputPattern = '[a-zA-Zа-яА-Я][a-zA-Zа-яА-Я\\\\s]*$';\r\n\r\n  constructor(public personsService: PersonsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.firstNameControl = new FormControl(this.firstName, [Validators.required, Validators.pattern(this.inputPattern)]);\r\n    this.lastNameControl = new FormControl(this.lastName, [Validators.required, Validators.pattern(this.inputPattern)]);\r\n  }\r\n\r\n  updatePerson(): void {\r\n    if (this.personsService.updatePerson(this.idperson, this.firstNameControl.value, this.lastNameControl.value)) { this.viewModal(); }\r\n  }\r\n\r\n  viewModal(): void {\r\n    if (this.hideModal === 'update-person__modal_hide') {\r\n      this.personsService.disconnectServer();\r\n      this.hideModal =  '';\r\n    }\r\n    else {\r\n      this.personsService.connectServer();\r\n      this.hideModal =  'update-person__modal_hide';\r\n    }\r\n  }\r\n}\r\n","<div class=\"update-person\">\r\n  <button class=\"update-person__edit material-icons md-24\" (click)=\"viewModal()\">create</button>\r\n  <div class=\"update-person__modal\" [class]=\"hideModal\">\r\n    <div class=\"update-person__window\">\r\n      <div class=\"update-person__top\">\r\n        <h1 class=\"update-person__title\">Редактирование сотрудника</h1>\r\n      </div>\r\n      <form class=\"update-person__form\">\r\n        <p><a href=\"#\" (click)=\"viewModal()\">Назад к списку</a></p>\r\n        <div class=\"update-person__input-box update-person__input-box_first\">\r\n          <input type=\"text\" [formControl]=\"firstNameControl\" name=\"firstName\" class=\"update-person__input\" placeholder=\"Введите имя сотрудника\">\r\n          <div *ngIf=\"firstNameControl.hasError('required')\" class=\"update-person__warning-elem\">\r\n            <p class=\"update-person__warning-text\">Это поле обязательно к заполнению</p>\r\n          </div>\r\n          <div *ngIf=\"firstNameControl.hasError('pattern')\" class=\"update-person__warning-elem\">\r\n            <p class=\"update-person__warning-text\">Неправильно заполнено поле</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"update-person__input-box\">\r\n          <input type=\"text\" [formControl]=\"lastNameControl\" name=\"lastName\" class=\"update-person__input\" placeholder=\"Введите фамилию сотрудника\">\r\n          <div *ngIf=\"lastNameControl.hasError('required')\" class=\"update-person__warning-elem\">\r\n            <p class=\"update-person__warning-text\">Это поле обязательно к заполнению</p>\r\n          </div>\r\n          <div *ngIf=\"firstNameControl.hasError('pattern')\" class=\"update-person__warning-elem\">\r\n            <p class=\"update-person__warning-text\">Неправильно заполнено поле</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"update-person__buttons\">\r\n          <button class=\"update-person__button\" (click)=\"updatePerson()\">Сохранить</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { PersonsService } from '../persons.service';\r\n\r\n@Component({\r\n  selector: 'app-remove-person',\r\n  templateUrl: './remove-person.component.html',\r\n  styleUrls: ['./remove-person.component.scss']\r\n})\r\nexport class RemovePersonComponent implements OnInit {\r\n\r\n  @Input() idperson = 0;\r\n  hideModal = 'remove-person__modal_hide';\r\n\r\n  constructor(public personsService: PersonsService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  removePerson(): void {\r\n    this.personsService.removePerson(this.idperson);\r\n    this.viewModal();\r\n  }\r\n\r\n  viewModal(): void {\r\n    if (this.hideModal === 'remove-person__modal_hide') {\r\n      this.personsService.disconnectServer();\r\n      this.hideModal =  '';\r\n    }\r\n    else {\r\n      this.personsService.connectServer();\r\n      this.hideModal =  'remove-person__modal_hide';\r\n    }\r\n  }\r\n}\r\n","<div class=\"remove-person\">\r\n  <button class=\"remove-person__edit material-icons md-24\" (click)=\"viewModal()\">close</button>\r\n  <div class=\"remove-person__modal\" [class]=\"hideModal\">\r\n    <div class=\"remove-person__window\">\r\n      <div class=\"remove-person__form\">\r\n        <p>Вы действительно хотите удалить сотрудника?</p>\r\n        <div class=\"remove-person__buttons\">\r\n          <button class=\"remove-person__button remove-person__button_first\" (click)=\"removePerson()\">Да</button>\r\n          <button class=\"remove-person__button\" (click)=\"viewModal()\">Нет</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000/persons/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { NotifierService } from './notifier.service';\r\n\r\n@Component({\r\n  selector: 'app-notifier',\r\n  templateUrl: './notifier.component.html',\r\n  styleUrls: ['./notifier.component.scss']\r\n})\r\nexport class NotifierComponent implements OnInit {\r\n  private subs = new Subscription();\r\n  private sub = new Subscription();\r\n\r\n  public text = '';\r\n  public modNotifier = 'notifier_hide';\r\n\r\n  constructor(public notifierService: NotifierService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sub = this.notifierService.observNotifier().subscribe(notifier => {\r\n      this.text = notifier.text;\r\n      this.modNotifier = notifier.modNotifier;\r\n      this.subs.add(this.sub);\r\n    });\r\n  }\r\n\r\n  closeNotifier(): void {\r\n    this.modNotifier =  'notifier_hide';\r\n  }\r\n}\r\n","<div class=\"notifier\" (click)=\"closeNotifier()\" [class]=\"modNotifier\">\r\n  <div class=\"notifier__box\">\r\n    <p class=\"notifier__text\" ngDefaultControl>{{ text }}</p>\r\n    <div class=\"notifier__close\">\r\n      <p>x</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { BehaviorSubject } from 'rxjs';\r\n\r\nexport class Notifier {\r\n  status: number;\r\n  typeOperation: string;\r\n  modNotifier = 'notifier_hide';\r\n  text: string;\r\n  subjectMessages = new BehaviorSubject(this);\r\n  constructor(modNotifier: string, text: string, status: number, typeOperation: string) {\r\n    this.status = status;\r\n    this.typeOperation = typeOperation;\r\n    this.modNotifier = modNotifier;\r\n    this.text = text;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { PersonsService } from './persons.service';\r\nimport { NotifierService } from './notifier/notifier.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  providers: [PersonsService, NotifierService]\r\n})\r\nexport class AppComponent {\r\n}\r\n","<div class=\"container\">\r\n  <app-notifier></app-notifier>\r\n  <app-persons></app-persons>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { Notifier } from './notifier';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotifierService {\r\n  notifier: Notifier;\r\n  subjectNotifier: BehaviorSubject<Notifier>;\r\n\r\n  constructor() {\r\n    this.notifier = new Notifier('notifier_hide', '', 0, '');\r\n    this.subjectNotifier = new BehaviorSubject(this.notifier);\r\n  }\r\n\r\n  public setOperation(status: number, typeOperation: string): void {\r\n    this.notifier.status = status;\r\n    this.notifier.typeOperation = typeOperation;\r\n\r\n    switch (typeOperation) {\r\n      case 'remove':\r\n        switch (status) {\r\n          case 200:\r\n            this.setTextAndMod('notifier_success', 'Сотрудник удален');\r\n            break;\r\n          case 400:\r\n            this.setTextAndMod('notifier_error', 'Сотрудник не удален из-за технической ошибки');\r\n            break;\r\n          case 404:\r\n            this.setTextAndMod('notifier_error', 'Сотрудник не существует');\r\n            break;\r\n          case 500:\r\n            this.setTextAndMod('notifier_error', 'Сотрудник не удален из-за технической ошибки на сервере');\r\n            break;\r\n          default:\r\n            this.setTextAndMod('notifier_error', 'Неизвестная ошибка');\r\n            break;\r\n        }\r\n        break;\r\n      case 'create':\r\n        switch (status) {\r\n          case 200:\r\n            this.setTextAndMod('notifier_success', 'Сотрудник успешно добавлен');\r\n            break;\r\n          case 400:\r\n            this.setTextAndMod('notifier_error', 'Сотрудник не добавлен из-за технической ошибки');\r\n            break;\r\n          case 404:\r\n            this.setTextAndMod('notifier_error', 'Сотрудник не существует');\r\n            break;\r\n          case 500:\r\n            this.setTextAndMod('notifier_error', 'Сотрудник не добавлен из-за технической ошибки на сервере');\r\n            break;\r\n          default:\r\n            this.setTextAndMod('notifier_error', 'Неизвестная ошибка');\r\n            break;\r\n        }\r\n        break;\r\n      case 'update':\r\n        switch (status) {\r\n          case 200:\r\n            this.setTextAndMod('notifier_success', 'Данные о сотруднике успешно изменены');\r\n            break;\r\n          case 400:\r\n            this.setTextAndMod('notifier_error', 'Данные о сотруднике не изменены из-за технической ошибки');\r\n            break;\r\n          case 404:\r\n            this.setTextAndMod('notifier_error', 'Сотрудник не существует');\r\n            break;\r\n          case 500:\r\n            this.setTextAndMod('notifier_error', 'Данные о сотруднике не изменены из-за технической ошибки на сервере');\r\n            break;\r\n          default:\r\n            this.setTextAndMod('notifier_error', 'Неизвестная ошибка');\r\n            break;\r\n        }\r\n        break;\r\n    }\r\n    this.subjectNotifier.next(this.notifier);\r\n  }\r\n\r\n  public observNotifier(): Observable<Notifier> {\r\n    return this.subjectNotifier.asObservable();\r\n  }\r\n\r\n  private setTextAndMod(mod: string, text: string): void {\r\n    this.notifier.modNotifier = mod;\r\n    this.notifier.text = text;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { Person } from './person';\r\nimport { NotifierService } from './notifier/notifier.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonsService {\r\n  private persons: Array<Person> = [];\r\n  private subject = new BehaviorSubject(this.persons);\r\n  private iterval = 0;\r\n  private validationErrors: Array<string> = [];\r\n\r\n  constructor(public http: HttpClient, public notifierService: NotifierService) {\r\n    this.bindPersonsFromServer(this);\r\n    const that = this;\r\n    this.setTimer(() => {\r\n      that.bindPersonsFromServer(that);\r\n    });\r\n  }\r\n\r\n  private setTimer(func: () => void): void {\r\n    this.iterval = window.setInterval(() => func(), 1000);\r\n  }\r\n\r\n  public removePerson(id: number): void {\r\n    this.http.delete(environment.apiUrl + id).subscribe(data => {\r\n      // console.log(data);\r\n    },\r\n    (error: any) => {\r\n      this.notifierService.setOperation(error.status, 'remove');\r\n  },\r\n  () => {\r\n    this.notifierService.setOperation(200, 'remove');\r\n  });\r\n  }\r\n\r\n  public observPersons(): Observable<Array<Person>> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  public createPerson(firstName: string, lastName: string): boolean {\r\n    if ((firstName !== '') && (lastName !== '')) {\r\n      let id = 1;\r\n      if (this.persons.length !== 0) {\r\n        id = this.persons[this.persons.length - 1].id + 1;\r\n      }\r\n      this.http.post(environment.apiUrl, {\r\n        id,\r\n        firstName,\r\n        lastName\r\n      }).subscribe(data => {\r\n        // console.log(data);\r\n      },\r\n      (error: any) => {\r\n        this.notifierService.setOperation(error.status, 'create');\r\n      },\r\n      () => {\r\n        this.notifierService.setOperation(200, 'create');\r\n      });\r\n      return true;\r\n    }\r\n    else {\r\n      this.validationErrors = [];\r\n      if (firstName === '') {\r\n        this.validationErrors.push(' введите имя');\r\n      }\r\n      if (lastName === '') {\r\n        this.validationErrors.push(' введите фамилию');\r\n      }\r\n      alert('Пожалуйста,' + this.validationErrors);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public updatePerson(id: number, firstName: string, lastName: string): boolean {\r\n    if ((firstName !== '') && (lastName !== '')) {\r\n      console.log('id: ' + id);\r\n      this.http.put(environment.apiUrl + id, {\r\n        firstName,\r\n        lastName\r\n      })\r\n      .subscribe(data => {\r\n        // console.log(data);\r\n      },\r\n      (error: any) => {\r\n        this.notifierService.setOperation(error.status, 'update');\r\n      },\r\n      () => {\r\n        this.notifierService.setOperation(200, 'update');\r\n      });\r\n      return true;\r\n    }\r\n    else {\r\n      this.validationErrors = [];\r\n      if (firstName === '') {\r\n        this.validationErrors.push(' введите имя');\r\n      }\r\n      if (lastName === '') {\r\n        this.validationErrors.push(' введите фамилию');\r\n      }\r\n      alert('Пожалуйста,' + this.validationErrors);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // -------- CONNECT/DISCONNECT SERVER-------- ///\r\n  private bindPersonsFromServer(that: PersonsService): void {\r\n    this.http.get(environment.apiUrl).subscribe((response: any) => {\r\n      if (JSON.stringify(that.persons) !== JSON.stringify(response)) {\r\n        that.persons = response.map((obj: Person) => {\r\n          const person = {id: obj.id, firstName: obj.firstName, lastName: obj.lastName};\r\n          return person;\r\n        });\r\n        that.subject.next(that.persons);\r\n      }\r\n    });\r\n  }\r\n\r\n  public disconnectServer(): void {\r\n    clearInterval(this.iterval);\r\n  }\r\n\r\n  public connectServer(): void {\r\n    const that = this;\r\n    that.setTimer(() => {\r\n      that.bindPersonsFromServer(that);\r\n    });\r\n  }\r\n  // ------------------------------------ ///\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PersonsComponent } from './persons/persons.component';\r\nimport { RemovePersonComponent } from './remove-person/remove-person.component';\r\nimport { CreatePersonComponent } from './create-person/create-person.component';\r\nimport { UpdatePersonComponent } from './update-person/update-person.component';\r\nimport { NotifierComponent } from './notifier/notifier.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PersonsComponent,\r\n    RemovePersonComponent,\r\n    CreatePersonComponent,\r\n    UpdatePersonComponent,\r\n    NotifierComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PersonsService } from '../persons.service';\r\n\r\n@Component({\r\n  selector: 'app-create-person',\r\n  templateUrl: './create-person.component.html',\r\n  styleUrls: ['./create-person.component.scss']\r\n})\r\nexport class CreatePersonComponent implements OnInit {\r\n\r\n  hideModal = 'create-person__modal_hide';\r\n\r\n  firstNameControl = new FormControl();\r\n  lastNameControl = new FormControl();\r\n\r\n  private inputPattern = '[a-zA-Zа-яА-Я][a-zA-Zа-яА-Я\\\\s]*$';\r\n  private firstNameValidators = [Validators.pattern(this.inputPattern)];\r\n  private lastNameValidators = [Validators.pattern(this.inputPattern)];\r\n\r\n  private firstNameSubscribe = new Subscription();\r\n  private lastNameSubscribe = new Subscription();\r\n\r\n  constructor(public personsService: PersonsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.firstNameControl = new FormControl('', this.firstNameValidators);\r\n    this.lastNameControl = new FormControl('', this.lastNameValidators);\r\n    // Добавление валидатора required сразу после изменения полей\r\n    this.firstNameSubscribe = this.firstNameControl.valueChanges.subscribe(() => {\r\n      if (this.firstNameValidators.length < 2) {\r\n        this.firstNameValidators.push(Validators.required);\r\n        this.firstNameControl.setValidators(this.firstNameValidators);\r\n      }\r\n      this.firstNameSubscribe.unsubscribe();\r\n    });\r\n    this.lastNameSubscribe = this.lastNameControl.valueChanges.subscribe(() => {\r\n      if (this.lastNameValidators.length < 2) {\r\n        this.lastNameValidators.push(Validators.required);\r\n        this.lastNameControl.setValidators(this.lastNameValidators);\r\n      }\r\n      this.lastNameSubscribe.unsubscribe();\r\n    });\r\n  }\r\n\r\n  savePerson(): void {\r\n    if (this.personsService.createPerson(this.firstNameControl.value, this.lastNameControl.value)) { this.viewModal(); }\r\n  }\r\n\r\n  viewModal(): void {\r\n    this.hideModal = this.hideModal === 'create-person__modal_hide' ? '' : 'create-person__modal_hide';\r\n  }\r\n}\r\n","<div class=\"create-person\">\r\n  <button class=\"create-person__button\" (click)=\"viewModal()\">Добавить сотрудника</button>\r\n\r\n  <div class=\"create-person__modal\" [class]=\"hideModal\">\r\n    <div class=\"create-person__window\">\r\n      <div class=\"create-person__top\">\r\n        <h1 class=\"create-person__title\">Создание сотрудника</h1>\r\n      </div>\r\n      <form class=\"create-person__form\">\r\n        <p><a href=\"#\" (click)=\"viewModal()\">Назад к списку</a></p>\r\n        <div class=\"create-person__input-box create-person__input-box_first\">\r\n          <input type=\"text\" [formControl]=\"firstNameControl\" name=\"firstName\" class=\"create-person__input create-person__input_first\" placeholder=\"Введите имя сотрудника\">\r\n          <div *ngIf=\"firstNameControl.hasError('required')\" class=\"create-person__warning-elem\">\r\n            <p class=\"create-person__warning-text\">Это поле обязательно к заполнению</p>\r\n          </div>\r\n          <div *ngIf=\"firstNameControl.hasError('pattern')\" class=\"create-person__warning-elem\">\r\n            <p class=\"create-person__warning-text\">Неправильно заполнено поле</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"create-person__input-box\">\r\n          <input type=\"text\" [formControl]=\"lastNameControl\" name=\"lastName\" class=\"create-person__input\" placeholder=\"Введите фамилию сотрудника\">\r\n          <div *ngIf=\"lastNameControl.hasError('required')\" class=\"create-person__warning-elem\">\r\n            <p class=\"create-person__warning-text\">Это поле обязательно к заполнению</p>\r\n          </div>\r\n          <div *ngIf=\"lastNameControl.hasError('pattern')\" class=\"create-person__warning-elem\">\r\n            <p class=\"create-person__warning-text\">Неправильно заполнено поле</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"create-person__buttons\">\r\n          <button class=\"create-person__button\" (click)=\"savePerson()\">Сохранить</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Person } from '../person';\r\nimport { PersonsService } from '../persons.service';\r\nimport { NotifierService } from '../notifier/notifier.service';\r\n\r\n@Component({\r\n  selector: 'app-persons',\r\n  templateUrl: './persons.component.html',\r\n  styleUrls: ['./persons.component.scss']\r\n})\r\nexport class PersonsComponent implements OnInit, OnDestroy {\r\n\r\n  private subs = new Subscription();\r\n  public peoples: Array<Person> = [];\r\n  private sub = new Subscription();\r\n\r\n  constructor(public personsService: PersonsService, public notifierService: NotifierService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sub = this.personsService.observPersons().subscribe(peoples => {\r\n      this.peoples = peoples;\r\n      this.subs.add(this.sub);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"persons\">\r\n  <div class=\"persons__table\">\r\n\r\n    <div class=\"persons__row persons__row_top\">\r\n      <div class=\"persons__column persons__column_n1\">\r\n        <h1 class=\"persons__title\">Имя</h1>\r\n      </div>\r\n      <div class=\"persons__column persons__column_n2\">\r\n        <h1 class=\"persons__title\">Фамилия</h1>\r\n      </div>\r\n      <div class=\"persons__column persons__column_n3\">\r\n        <h1 class=\"persons__title\"></h1>\r\n      </div>\r\n    </div> \r\n\r\n\r\n    <div class=\"persons__row\" *ngFor=\"let item of peoples\">\r\n      <div class=\"persons__column persons__column_n1\">\r\n        <img class=\"persons__icon\" src=\"assets/images/person-icon.svg\" alt=\"person-icon\">\r\n        <p class=\"persons__text\">{{ item.firstName }}</p>\r\n      </div>\r\n      <div class=\"persons__column persons__column_n2\">\r\n        <p class=\"persons__text\">{{ item.lastName }}</p>\r\n      </div>\r\n      <div class=\"persons__column persons__column_n3\">\r\n        <app-update-person [idperson]=\"item.id\" [firstName]=\"item.firstName\" [lastName]=\"item.lastName\"></app-update-person>\r\n        <app-remove-person [idperson]=\"item.id\"></app-remove-person>\r\n      </div>\r\n    </div>\r\n    <app-create-person></app-create-person>\r\n\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}